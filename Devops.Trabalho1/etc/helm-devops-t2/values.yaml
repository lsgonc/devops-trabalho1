apps:
  - name: postgres
    enabled: true
    replicaCount: 1
    image:
      repository: postgres
      tag: "14.1"
      pullPolicy: IfNotPresent
    ports:
      - name: postgres
        containerPort: 5432
    env:
      - name: POSTGRES_USER
        value: "postgres"
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: "trabalho1-secrets"
            key: postgres-password
    probes:
      readiness:
        exec:
          command: ["pg_isready", "-U", "postgres"]
        initialDelaySeconds: 10
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 5
      liveness:
        exec:
          command: ["pg_isready", "-U", "postgres"]
        initialDelaySeconds: 30
        periodSeconds: 10
        timeoutSeconds: 5
        failureThreshold: 5
    volumeMounts:
      - name: postgres-storage
        mountPath: /var/lib/postgresql/data
    volumes:
      - name: postgres-storage
        spec:
          persistentVolumeClaim:
            claimName: "trabalho1-postgres-pvc"
    service:
      name: postgres
      enabled: true
      type: ClusterIP
      ports:
        - name: tcp-postgres
          port: 5432
          targetPort: 5432
          protocol: TCP
    persistence:
      name: postgres
      enabled: true
      accessModes:
        - ReadWriteOnce
      size: 1Gi

  - name: redis
    enabled: true
    replicaCount: 1
    image:
      repository: redis
      tag: "alpine"
      pullPolicy: IfNotPresent
    ports:
      - name: redis
        containerPort: 6379
    command: ["redis-server"]
    probes:
      readiness:
        exec:
          command: ["redis-cli", "ping"]
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 3
      liveness:
        exec:
          command: ["redis-cli", "ping"]
        initialDelaySeconds: 10
        periodSeconds: 15
        timeoutSeconds: 3
        failureThreshold: 5
    service:
      name: redis
      enabled: true
      type: ClusterIP
      ports:
        - name: tcp-redis
          port: 6379
          targetPort: 6379
          protocol: TCP

  - name: angular
    enabled: true
    replicaCount: 1
    image:
      repository: lucasjjgg/trabalho1-angular
      tag: "latest"
      pullPolicy: Always
    ports:
      - name: https
        containerPort: 443
    probes:
      readiness:
        httpGet:
          path: /
          port: 443
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 10
        timeoutSeconds: 3
        failureThreshold: 5
    volumeMounts:
      - name: ssl-certs
        mountPath: /etc/ssl
        readOnly: true
    volumes:
      - name: ssl-certs
        spec:
          secret:
            secretName: "trabalho1-secrets"
            items:
              - key: cert-crt
                path: cert.crt
              - key: cert-key
                path: cert.key
    service:
      name: angular
      enabled: true
      type: ClusterIP
      ports:
        - name: https
          port: 443
          targetPort: 443
          protocol: TCP

  - name: api
    enabled: true
    replicaCount: 1
    image:
      repository: lucasjjgg/trabalho1-api
      tag: "latest"
      pullPolicy: Always
    ports:
      - name: https
        containerPort: 8081
      - name: http
        containerPort: 8080
    env:
      - name: ASPNETCORE_URLS
        value: "https://+:8081;http://+:8080"
      - name: Kestrel__Certificates__Default__Path
        value: /app/certs/localhost.pfx
      - name: Kestrel__Certificates__Default__Password
        valueFrom:
          secretKeyRef:
            name: "trabalho1-secrets"
            key: certificate-password
      - name: App__SelfUrl
        value: "https://trabalho1-api:8081"
      - name: App__AngularUrl
        value: "https://k8s.local:31475/"
      - name: App__CorsOrigins
        value: "https://trabalho1-authserver:8081,https://localhost:8081,https://trabalho1-angular:443,https://localhost:4200"
      - name: App__HealthCheckUrl
        value: "http://trabalho1-api:8080/health-status"
      - name: AuthServer__RequireHttpsMetadata
        value: "true"
      - name: AuthServer__Authority
        value: "https://k8s.local:31475/"
      - name: AuthServer__MetaAddress
        value: "https://trabalho1-authserver:8081"
      - name: ConnectionStrings__Default
        value: "User ID=postgres;Password=myPassw0rd;Host=trabalho1-postgres;Port=5432;Database=Trabalho1;Pooling=false"
      - name: Redis__Configuration
        value: "trabalho-1-redis:6379,abortConnect=false"
    volumeMounts:
      - name: certs
        mountPath: /app/certs
        readOnly: true
    volumes:
      - name: certs
        spec:
          secret:
            secretName: "trabalho1-secrets"
            items:
            - key: localhost-pfx
              path: localhost.pfx
    service:
      name: api
      enabled: true
      type: ClusterIP
      ports:
        - name: http
          port: 8080
          targetPort: 8080
          protocol: TCP
        - name: https
          port: 8081
          targetPort: 8081
          protocol: TCP

  - name: authserver
    enabled: true
    replicaCount: 1
    image:
      repository: lucasjjgg/trabalho1-authserver
      tag: "latest"
      pullPolicy: Always
    ports:
      - name: https
        containerPort: 8081
      - name: http
        containerPort: 8080
    env:
      - name: ASPNETCORE_URLS
        value: "https://+:8081;http://+:8080"
      - name: App__SelfUrl
        value: "https://trabalho1-authserver:8081"
      - name: App__CorsOrigins
        value: "https://trabalho1-angular:443,https://trabalho1-api:8081,https://k8s.local:31475"
      - name: App__HealthCheckUrl
        value: "http://trabalho1-authserver:8080/health-status"
      - name: App__AngularUrl
        value: "https://k8s.local:31475/"
      - name: App__RedirectAllowedUrls
        value: "https://k8s.local:31475/"
      - name: AuthServer__RequireHttpsMetadata
        value: "true"
      - name: AuthServer__Authority
        value: "https://k8s.local:31475/"
      - name: Kestrel__Certificates__Default__Path
        value: "/app/certs/localhost.pfx"
      - name: Kestrel__Certificates__Default__Password
        valueFrom:
          secretKeyRef:
            name: "trabalho1-secrets"
            key: certificate-password
      - name: ConnectionStrings__Default
        value: "User ID=postgres;Password=myPassw0rd;Host=trabalho1-postgres;Port=5432;Database=Trabalho1;Pooling=false"
      - name: Redis__Configuration
        value: "trabalho1-redis:6379,abortConnect=false"
    volumeMounts:
      - name: certs
        mountPath: /app/certs
        readOnly: true
    volumes:
      - name: certs
        spec:
          secret:
            secretName: "trabalho1-secrets"
            items:
              - key: localhost-pfx
                path: localhost.pfx
    service:
      name: authserver
      enabled: true
      type: ClusterIP
      ports:
        - name: http
          port: 8080
          targetPort: 8080
          protocol: TCP
        - name: https
          port: 8081
          targetPort: 8081
          protocol: TCP

ingress:
  enabled: true
  className: "" 
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
  hosts:
    - host: k8s.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: trabalho1-angular 
              port:
                number: 443 
  tls:
    - hosts:
        - k8s.local
      secretName: "trabalho1-certs-secrets"

dbMigrator:
  enabled: true
  image:
    repository: lucasjjgg/trabalho1-db-migrator
    tag: latest
    pullPolicy: Always
  rootUrl: "https://k8s.local:31475/"
  swaggerUrl: "http://trabalho1-api:8080"
  dbName: "Trabalho1"